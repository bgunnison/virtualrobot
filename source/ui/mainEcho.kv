#:kivy 1.0.9
#:import SwapTransition kivy.uix.screenmanager.SwapTransition

<NavButton@ToggleButton>:
    height: 60
    size_hint: .9, None
    pos_hint: {'center_x':.5, 'center_y':.5}
    border: 10, 10, 10, 10
    markup: True
    group: 'nav'


<MidiPortSelectSpinner@Spinner>:
    size: (400,30) 
    size_hint: None, None
    markup: True
    text: 'None'
    sync_height: True
    

<MyCheckBox@CheckBox>:
    canvas.before:
        Color:
            rgb: 0,0,0
        Rectangle:
            pos:self.center_x-8, self.center_y-8
            size:[16,16]


<ClockSourceToggleButton@ToggleButton>:
    group: 'clock_source'
    markup: True
    size_hint: None, None
    width: 100
    height: 30

<OnOffToggleButton@ToggleButton>:
    group: 'onoff'
    markup: True
    size_hint: None, None
    width: 30
    height: 20

<MyLEDImage@Image>:
    source: 'media/off_led.png'
    size_hint: None, None
    size: (25,25)
    
<CCEntryBox@CCControlInput>:
    multiline: False
    size_hint: None, None
    size: (35,35)
    background_color: (.5,.8,.5,1) if self.focus else (0,.5,0,1)
    forground_color: (0,1,0,1)
    halign: 'center'

<RootWidget>:
    orientation: 'vertical' 
    canvas.before:
        Color:
            rgba: 0.5, 0.5, 0.5, 1
        Rectangle:
            pos: self.pos
            size: self.size

    TitleBoxLayout:
        orientation: 'horizontal' 
        height: 60
        size_hint: 1, None
        pos_hint: {'x':0, 'top':1}
        canvas.before:
            Color:
                rgb: 0,0,0
            Rectangle:
                pos: self.pos
                size: self.size

        LogoZipped:
            size: (600/7,600/7) #imag.size
            size_hint: None, None
            pos_hint: {'left':1, 'center_y':.5}
            Image:
                source: 'media/logo.zip'
                anim_delay: 0.2

        BoxLayout:
            orientation: 'horizontal' 
            height: 60
            size_hint: 1, None
            pos_hint: {'x':0, 'top':1}
            canvas.before:
                Color:
                    rgb: 0,.5,0
                Rectangle:
                    pos: self.pos
                    size: self.size
            Label:
                markup: True
                text: '[b]- MIDI ECHO -[/b]'
                height: 60
                font_size: 50

    BoxLayout:
        id: myscreens
        orientation: 'horizontal'
        NavButtons:    
            orientation: 'vertical' 
            width: 65
            size_hint: None, .5
            pos_hint: {'left':1, 'center_y':.8}
            NavButton:
                id: nav_midi
                text: '[b]MIDI[/b]'
                on_press: root.nav_button_pressed(self, 'screen_midi')
            NavButton:
                id: nav_echo
                text: '[b]ECHO[/b]'
                on_press: root.nav_button_pressed(self, 'screen_echo')
            NavButton:
                id: nav_live
                text: '[b]LIVE[/b]'
                on_press: root.nav_button_pressed(self, 'screen_live')
            NavButton:
                id: nav_help
                text: '[b]HELP[/b]'
                on_press: root.nav_button_pressed(self, 'screen_help')

        MainScreenManager:
            id: screen_manager
            transition: SwapTransition()

            MidiScreen:
                id: screen_midi
                name: 'screen_midi'
                manager: 'screen_manager'
                FloatLayout:
                    orientation: 'vertical'
                    Label:
                        markup: True
                        text: '[b]MIDI PORTS[/b]'
                        font_size: 30
                        height: 20
                        size_hint: 1, None
                        pos_hint: {'top':.9}
                    
                    FloatLayout:
                        height: 60
                        size_hint: 1, None
                        pos_hint: {'top':.8}
                       
                        Label:
                            markup: True
                            text: '[b]INPUT:[/b]'
                            pos_hint: {'x':.13, 'center_y':0.5}
                            width: 20
                            size_hint: None, 1
                           
                        MidiPortSelectSpinner:
                            id: midi_port_in
                            pos_hint: {'x':.2, 'center_y':.5}
                            on_text: root.select_midi_input_port(self)
                            on_press: root.update_port_selections()
                        MyLEDImage:
                            id: midi_in_activity
                            pos_hint: {'x':.75, 'center_y':.5}

                    FloatLayout:
                        height: 60
                        size_hint: 1, None
                        pos_hint: {'top':.7}
                        Label:
                            markup: True
                            text: '[b]OUTPUT:[/b]'
                            pos_hint: {'x':.12, 'center_y':0.5}
                            width: 20
                            size_hint: None, 1
                        MidiPortSelectSpinner:
                            id: midi_port_out
                            pos_hint: {'x':.2, 'center_y':.5}
                            on_text: root.select_midi_output_port(self)
                        MyLEDImage:
                            id: midi_out_activity
                            pos_hint: {'x':.75, 'center_y':.5}

                            

                    Label:
                        markup: True
                        text: '[b]MIDI CLOCK[/b]'
                        font_size: 30
                        height: 20
                        size_hint: 1, None
                        pos_hint: {'top':.5}
                    FloatLayout:
                        height: 60
                        size_hint: 1, None
                        pos_hint: {'top':.4}
                        ClockSourceToggleButton:
                            id: clock_internal
                            text: '[b]INTERNAL[/b]'
                            pos_hint: {'x':.35, 'center_y':0.5}
                            on_press: root.select_internal_clock(self)
                        ClockSourceToggleButton:
                            id: clock_external
                            text: '[b]EXTERNAL[/b]'
                            pos_hint: {'x':.5, 'center_y':0.5}
                            on_press: root.select_external_clock(self)
                    FloatLayout:
                        height: 60
                        size_hint: 1, None
                        pos_hint: {'top':.3}

                        Slider:
                            id: clock_bpm_slider
                            pos_hint: {'center_x':.5, 'center_y':.5}
                            width: 600
                            size_hint: None, 1
                            min: 10
                            max: 240
                            value: 60
                            on_value: root.change_internal_clock_bpm(self.value)
                            #Label:
                            #    pos: (root.value_pos[0] - sp(16), root.center_y - sp(27)) if root.orientation == 'horizontal' else (root.center_x - sp(27), root.value_pos[1] - sp(16))
                            #    size_hint: None, None
                            #    size: sp(32), sp(32)
                            #    text: str(root.value)
                    FloatLayout:
                        height: 60
                        size_hint: 1, None
                        pos_hint: {'top':.2}
                        MyLEDImage:
                            id: midi_clock_activity
                            pos_hint: {'x':.37, 'center_y':.5}
                        CCEntryBox:
                            id: cc_control_internal_clock_bpm
                            pos_hint: {'x':.42, 'center_y':0.5}
                            on_text_validate: root.ui_control_map_clock_bpm(self)
                        Label:
                            width: 15
                            size_hint: None, 1
                            pos_hint: {'x':.5, 'center_y':.5}
                            markup: True
                            text: '[b]BPM:[/b]'
                        Label:
                            width: 10
                            size_hint: None, 1
                            pos_hint: {'x':.55, 'center_y':.5}
                            markup: True
                            text: '[b]' + str(int(clock_bpm_slider.value)) + '[/b]'



            EchoScreen:
                id: screen_echo
                name: 'screen_echo'
                manager: 'screen_manager'
                FloatLayout:
                    orientation: 'vertical'
                    Label:
                        markup: True
                        text: '[b]ECHO CONTROLS[/b]'
                        font_size: 30
                        height: 20
                        size_hint: 1, None
                        pos_hint: {'top':.9}
                FloatLayout
                    height: 60
                    size_hint: 1, None
                    pos_hint: {'top':.8}
                    Label:
                        markup: True
                        text: '[b]EFFECT:[/b]'
                        pos_hint: {'x':.08, 'center_y':0.5}
                        width: 20
                        size_hint: None, 1
                    CCEntryBox:
                        id: cc_control_effect_enable
                        pos_hint: {'x':.14, 'center_y':0.5}
                        on_text_validate: root.ui_control_map_effect_enable(self)
                    OnOffToggleButton:
                        id: effect_on
                        text: '[b]ON[/b]'
                        pos_hint: {'x':.2, 'center_y':0.5}
                        on_press: root.effect_on(True)
                        state: 'down'
                    OnOffToggleButton:
                        id: effect_off
                        text: '[b]OFF[/b]'
                        pos_hint: {'x':.3, 'center_y':0.5}
                        state: 'normal'
                        on_press: root.effect_on(False)                    
                            
               
               
                
            LiveScreen:
                id: screen_live
                name: 'screen_live'
                manager: 'screen_manager'
                Label:
                    text: 'LIVE'
            HelpScreen:
                id: screen_help
                name: 'screen_help'
                manager: 'screen_manager'
                Label:
                    text: 'HELP'


        

